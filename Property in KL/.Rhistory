setNames(c("day", header)) %>%
mutate(month = month,
day = as.numeric(day)) %>%
gather(year, deaths, -c(day, month)) %>%
mutate(deaths = as.numeric(deaths))
}) %>%mutate(month = recode(month, "JAN" = 1, "FEB" = 2, "MAR" = 3, "APR" = 4, "MAY" = 5, "JUN" = 6,
"JUL" = 7, "AGO" = 8, "SEP" = 9, "OCT" = 10, "NOV" = 11, "DEC" = 12)) %>%
mutate(date = make_date(year, month, day)) %>%
filter(date <= "2018-05-01")
span <- 60 / as.numeric(diff(range(dat$date)))
fit <- dat %>% mutate(x = as.numeric(date)) %>% loess(deaths ~ x, data = ., span = span, degree = 1)
dat %>% mutate(smooth = predict(fit, as.numeric(date))) %>%
ggplot() +
geom_point(aes(date, deaths)) +
geom_line(aes(date, smooth), lwd = 2, col = 2)
if(!exists("mnist")) mnist <- read_mnist()
x <- mnist$train$images
y <- mnist$train$labels
ind <- (x > 50 & x < 205)
ind <- rowMeans(ind)
mean(ind)
mnist_27$train %>%
mutate(y = ifelse(y=="7", 1, 0)) %>%
ggplot(aes(x_2, y)) +
geom_smooth(method = "loess")
#Answer : D) There is predictive power and the conditional probability is non-linear.
#----------Comprehension Check: Working with Matrices--------------
#-----------------------------Q1-------------------------------
#Answer : B) x <- matrix(rnorm(100*10), 100, 10)
#----------------------------Q2---------------------------
#Answer: dim(x), nrow(x), ncol(x)
#----------------------------Q3-----------------------------
x <- x + seq(nrow(x))
x <- sweep(x, 1, 1:nrow(x),"+")
#Answer : A and D
#-----------------------------Q4----------------------------
x <- sweep(x, 2, 1:ncol(x), FUN = "+")
#Answer : C
#----------------------------Q5-------------------------
rowMeans(x)
colMeans(x)
#Answer : row = D, col = B
#--------------------------Q6---------------------------
if(!exists("mnist")) mnist <- read_mnist()
x <- mnist$train$images
y <- mnist$train$labels
ind <- (x > 50 & x < 205)
ind <- rowMeans(ind)
mean(ind)
if(!exists("mnist"))
mnist <- read_mnist()
mnist <- read_mnist()
y <- rowMeans(mnist$train$images>50 & mnist$train$images<205)
qplot(as.factor(mnist$train$labels), y, geom = "boxplot")
library(dslabs)
library(tidyverse)
library(caret)
data("heights")
set.seed(1)
test_index <- createDataPartition(heights$sex, times = 1, p = 0.5, list = FALSE)
test_set <- heights[test_index, ]
train_set <- heights[-test_index, ]
ks <- seq(1, 101, 3)
F_1 <- sapply(ks, function(k){
fit <- knn3(sex ~ height, data = train_set, k = k)
y_hat <- predict(fit, test_set, type = "class") %>%
factor(levels = levels(train_set$sex))
F_meas(data = y_hat, reference = test_set$sex)
})
plot(ks, F_1)
max(F_1)
ks[which.max(F_1)]
library(dslabs)
data("tissue_gene_expression")
#---------------------Q5-----------------------
set.seed(1995)
indexes <- createResample(mnist_27$train$y, 10)
View(indexes)
library(rpart)
n <- 1000
sigma <- 0.25
set.seed(1)
x <- rnorm(n, 0, 1)
y <- 0.75 * x + rnorm(n, 0, sigma)
dat <- data.frame(x = x, y = y)
set.seed(1)
n <- c(100, 500, 1000, 5000, 10000)
res <- sapply(n, function(n){
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
rmse <- replicate(100, {
test_index <- createDataPartition(dat$y, times = 1, p = 0.5, list = FALSE)
train_set <- dat %>% slice(-test_index)
test_set <- dat %>% slice(test_index)
fit <- lm(y ~ x, data = train_set)
y_hat <- predict(fit, newdata = test_set)
sqrt(mean((y_hat-test_set$y)^2))
})
c(avg = mean(rmse), sd = sd(rmse))
})
res
install.packages(c("data.table", "e1071", "mice", "VIM"))
install.packages(c("ggiraphExtra", "ggmap"))
setwd("D:/All Files/R-/Property in KL")
dataKL <- read.csv("data_kaggle.csv")
View(dataKL)
str(dataKL)
is.na(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colLocation
colPrice<-sum(is.na(dataKL$Price))
colPrice
install.packages(c("ggrepel", "lubridate", "tidyverse"))
data1 <- dataKL
View(data1)
data1 <- gsub('\\s+', '', data1$Price)
data1
data1 <- dataKL
data1$Price <- gsub('\\s+', '', data1$Price)
View(data1)
data1$Price[data$Price == ""] <- NA
data1$Price[data1$Price == ""] <- NA
data1
View(data1)
data1[data1 == ""] <- NA
data1
data2 <- na.omit(data1$Price & data1$Furnishing)
data2 <- na.omit(data1$Price && data1$Furnishing)
data2 <- na.omit(data1$Price)
data2
data2 < -data1
data2$Price <- na.omit(data1$Price)
data2$Price <- na.omit(data1$Price)
View(data2)
data2 <- na.omit(data1)
View(data2)
data3 <- data1
View(data3)
data3[complete.cases(data3[ , 2,7,8]),]
data3[complete.cases(data3[ , 2,7:8]),]
data3<-data3[complete.cases(data3[ , 2,7:8]),]
View(data3)
View(data2)
data2 < -data1
View(data2)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 < -data1
data3 <- data1
data2 < -data1
data2 <- data1
View(data2)
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),]
View(data1)
View(data2)
View(data3)
View(data3)
as.numeric(gsub("RM ","",data3$Price))
try<-as.numeric(gsub("RM ","",data3$Price))
try<-as.data.frame(as.numeric(gsub("RM ","",data3$Price)))
View(try)
try<-as.data.frame(as.numeric(gsub("RM ","",data3)))
View(try)
try<-as.data.frame(as.numeric(gsub("RM ","",data3$Price)))
try<-as.data.frame(as.numeric(gsub("RM ",data3$Price)))
try<-as.data.frame(as.numeric(gsub("RM","",data3$Price)))
View(try)
View(try)
try<-as.data.frame(as.numeric(gsub("([0-9]+).*$", "\\1", years)))
source('D:/All Files/R-/KL-Property-Preprocessing.R', echo=TRUE)
View(try)
str(data3)
data3$Price <- as.character(data3$Price)
View(data3)
data3
str(data3)
try<-as.data.frame(as.numeric(gsub("RM ", "", data3$Price)))
View(try)
str(data3)
try <- gregexpr('[0-9]+',data3$Price)
View(try)
try <- as.data.frame(as.numeric(gregexpr('[0-9]+',data3$Price)))
try<-gsub('.*-([0-9]+).*','\\1',data3$Price)
try
try<-as.numeric(gsub('.*-([0-9]+).*','\\1',data3$Price))
try
try<-as.numeric(gsub('^\$?([5-9],?\d{3}|\d{2,3}?,?\d{3}|(?:1,?000,?000))$','\\1',data3$Price))
([0-9]{3})\.([0-9]{2})$
regX <-  '^(R|AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|INR|IQD|IRR|ISK|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SRD|SSP|STD|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XOF|XPF|YER|ZAR|ZMW)\s?([5-9][,\s][0-9]{3}[,\s]|[0-9]{2,3}[,\s][0-9]{3}[,\s]|[0-9]{1,3}[,\s](?:[0-9]{3}[,\s]){2,})
([0-9]{3})\.([0-9]{2})$'
regX
try<-as.numeric(gsub('^(RM|USD)\s?([5-9][,\s][0-9]{3}[,\s]|[0-9]{2,3}[,\s][0-9]{3}[,\s]|[0-9]{1,3}[,\s](?:[0-9]{3}[,\s]){2,})
([0-9]{3})\.([0-9]{2})$','\\1',data3$Price))
try
try<-as.numeric(gsub('^(RM|USD)\s?([5-9][,\s][0-9]{3}[,\s]|[0-9]{2,3}[,\s][0-9]{3}[,\s]|[0-9]{1,3}[,\s](?:[0-9]{3}[,\s]){2,})
([0-9]{3})\.([0-9]{2})$','\\1',data3$Price))
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
try
data3$Price <- as.data.frame(as.numeric(try))
View(data3)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
data3
str(data3)
data4 <- data3
data4$Price <- as.data.frame(as.numeric(try))
View(data4)
View(data3)
write.csv("Dataset.csv", data3)
write.csv(data3,"Dataset.csv")
colnames(data4$Price) <- "Price"
View(data4)
colnames(data4$Price) <- " "
View(data4)
colnames(data4$Price) <- ""
View(data4)
colnames(data4)[colnames(data4)=="Price."] <- "Price"
View(data4)
colnames(data4)[colnames(data4)=="Price."] <- "PriceL"
View(data4)
colnames(data4)[colnames(data4)=="Price."] <- "PriceL"
View(data4)
names(data4)[2] <- "Price (RM)"
View(dataKL)
View(data4)
colnames(data4$`Price (RM)` <- "Price in RM"
View(dataKL)
data4
str(data4)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
str(data3)
data4 <- data3
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
data4$Price <- as.numeric(try)
str(data4)
colnames(data4$Price) <- "Price in RM"
colnames(data4)[colnames(data4)=="Price"] <- "Price in RM"
View(data4)
data5<-data4
str(data4$`Price in RM`)
str(data4$`Price in RM`)
str(data4$Rooms)
data4$Rooms
data5$finalRooms <- sapply(as.character(data5$Rooms), function(x) eval(parse(text = x)))
df
df <- structure(list(Rooms = structure(c(2L, 5L, 3L, 2L, 6L, 5L, 1L,
4L), .Label = c("1+1", "1+2", "1+3", "2", "3", "4"), class = "factor")),
class = "data.frame", row.names = c(NA, -8L))
View(df)
str(df)
df$final_rooms <- sapply(as.character(df$Rooms), function(x) eval(parse(text = x)))
View(df)
data5$finalRooms <- sapply(as.character(data5$Rooms), function(x) eval(parse(text = x)))
eval(parse(text='3+19-2'))
length(unique(data5$Rooms))
table(data5$Rooms)
categories<-table(data5$Rooms)
categories<-data.table(table(data5$Rooms))
library(data.table)
categories<-data.table(table(data5$Rooms))
View(categories)
frequency(data5$Rooms)
typeFreq<-data.table(table(data5$Rooms))
View(typeFreq)
toBeRemoved<-which(data5$Rooms =="20 Above" | data5$Rooms == "Studio")
data5<-data5[-toBeRemoved,]
View(data5)
View(typeFreq)
View(data5)
typeFreq<-data.table(table(data5$Rooms))
View(typeFreq)
str(data5)
data5<-as.data.frame(data5[-toBeRemoved,])
View(data5)
str(data5)
data.table(table(data5$Rooms))
library(data.table)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
str(data3)
data4 <- data3
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
data4$Price <- as.numeric(try)
write.csv(data3,"Dataset.csv")
colnames(data4)[colnames(data4)=="Price"] <- "Price in RM" #Change column name
str(data4)
data4$Rooms
typeFreq<-data.table(table(data5$Rooms))
typeFreq<-data.table(table(data4$Rooms))
View(typeFreq)
toBeRemoved<-which(data4$Rooms =="20 Above" | data4$Rooms == "Studio")
data5<-as.data.frame(data4[-toBeRemoved,])
typeFreq_2<-data.table(table(data5$Rooms))
View(typeFreq_2)
str(data5)
View(data5)
data5$finalRooms <- sapply(as.character(data5$Rooms), function(x) eval(parse(text = x)))
data5$Rooms[data5$Rooms == '6+'] <- '6+0'
View(data5)
str(data5)
View(data5)
levels(data5$Rooms) <- c(levels(data5$Rooms), "6+0")
data5$Rooms[data5$Rooms == '6+'] <- '6+0'
str(data5)
View(data5)
data5$Rooms<-data5$Rooms[data5$Rooms == '6+'] <- '6+0'
View(data5)
library(data.table)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
str(data3)
data4 <- data3
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
data4$Price <- as.numeric(try)
write.csv(data3,"Dataset.csv")
colnames(data4)[colnames(data4)=="Price"] <- "Price in RM" #Change column name
str(data4)
data5<-data4
data4$Rooms
typeFreq<-data.table(table(data4$Rooms))
##eval(parse(text='3+19-2'))
toBeRemoved<-which(data4$Rooms =="20 Above" | data4$Rooms == "Studio") ## drop or remove 20 above and Studio
data5<-as.data.frame(data4[-toBeRemoved,])
View(data5)
levels(data5$Rooms) <- c(levels(data5$Rooms), "6+0")
data5$Rooms[data5$Rooms == '6+'] <- '6+0'
View(data5)
library(data.table)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
str(data3)
data4 <- data3
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
data4$Price <- as.numeric(try)
write.csv(data3,"Dataset.csv")
colnames(data4)[colnames(data4)=="Price"] <- "Price in RM" #Change column name
str(data4)
data5<-data4
data4$Rooms
typeFreq<-data.table(table(data4$Rooms))
##eval(parse(text='3+19-2'))
toBeRemoved<-which(data4$Rooms =="20 Above" | data4$Rooms == "Studio") ## drop or remove 20 above and Studio
data5<-as.data.frame(data4[-toBeRemoved,])
View(data5)
str(data5)
levels(data5$Rooms)[match("6+1",levels(iris$Species))] <- "6+0"
str(data5)
typeFreq_2<-data.table(table(data5$Rooms))
View(typeFreq_2)
data6<-levels(data5$Rooms)[match("6+1",levels(iris$Species))] <- "6+0"
library(data.table)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
str(data3)
data4 <- data3
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
data4$Price <- as.numeric(try)
write.csv(data3,"Dataset.csv")
colnames(data4)[colnames(data4)=="Price"] <- "Price in RM" #Change column name
str(data4)
data5<-data4
data4$Rooms
typeFreq<-data.table(table(data4$Rooms))
##eval(parse(text='3+19-2'))
toBeRemoved<-which(data4$Rooms =="20 Above" | data4$Rooms == "Studio") ## drop or remove 20 above and Studio
data5<-as.data.frame(data4[-toBeRemoved,])
levels(data5$Rooms)[match("6+",levels(iris$Species))] <- "6+0"
typeFreq_2<-data.table(table(data5$Rooms))
str(data5)
View(typeFreq_2)
levels(data5$Rooms)[match("6+",levels(data5$Rooms))] <- "6+0"
typeFreq_2<-data.table(table(data5$Rooms))
View(typeFreq_2)
library(data.table)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
str(data3)
data4 <- data3
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
data4$Price <- as.numeric(try)
write.csv(data3,"Dataset.csv")
colnames(data4)[colnames(data4)=="Price"] <- "Price in RM" #Change column name
str(data4)
data5<-data4
data4$Rooms
typeFreq<-data.table(table(data4$Rooms))
View(data5)
library(data.table)
dataKL <- read.csv("data_kaggle.csv")
str(dataKL)
colLocation<-sum(is.na(dataKL$Location))
colPrice<-sum(is.na(dataKL$Price)) #There is whitespaces that does not consider as null
data1 <- dataKL
data1[data1 == ""] <- NA # Change all blankspace "" into NA
data2 <- data1
data3 <- data1
data2 <- na.omit(data1) # Kalau nak buang semua NA, regardless of column
data3<-data3[complete.cases(data3[ , 2,7:8]),] # Kalau nak buang row yang betul betul takdak NA yang ditetapkan
str(data3)
data3$Price <- as.character(data3$Price)
str(data3)
data4 <- data3
try<-gsub('RM ','',data3$Price)
try <- gsub(',','',try)
data4$Price <- as.numeric(try)
write.csv(data3,"Dataset.csv")
colnames(data4)[colnames(data4)=="Price"] <- "Price in RM" #Change column name
str(data4)
data5<-data4
data4$Rooms
typeFreq<-data.table(table(data4$Rooms))
View(typeFreq)
levels(data5$Rooms)[match("6+",levels(data5$Rooms))] <- "6" ## replace the 6+ to 6+0
levels(data5$Rooms)[match("10+",levels(data5$Rooms))] <- "10"
levels(data5$Rooms)[match("12+",levels(data5$Rooms))] <- "12"
levels(data5$Rooms)[match("13+",levels(data5$Rooms))] <- "13"
levels(data5$Rooms)[match("15+",levels(data5$Rooms))] <- "15"
levels(data5$Rooms)[match("7+",levels(data5$Rooms))] <- "7"
levels(data5$Rooms)[match("8+",levels(data5$Rooms))] <- "8"
levels(data5$Rooms)[match("9+",levels(data5$Rooms))] <- "9"
levels(data5$Rooms)[match("Studio",levels(data5$Rooms))] <- "1"
levels(data5$Rooms)[match("20 Above",levels(data5$Rooms))] <- "20"
typeFreq_2<-data.table(table(data5$Rooms))
View(typeFreq_2)
str(data5)
data5$finalRooms <- sapply(as.character(data5$Rooms), function(x) eval(parse(text = x)))
View(data5)
